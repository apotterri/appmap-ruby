#!/usr/bin/env ruby

require 'json'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '../lib')

require 'appmap'
require 'appmap/annotation'
require 'shellwords'

def usage
  warn 'Usage: trace <inspect-file> program'
  exit 1
end

inspect_file = ARGV.shift || usage
program = ARGV.shift

inspect_data = JSON.parse(File.read(inspect_file))
annotations = inspect_data.map { |entry| AppMap::Annotation.from_hash(entry) }
methods = annotations.map(&:collect_methods).flatten

require 'appmap/trace/tracer'

tracer = AppMap::Trace::Tracer.new(methods)
AppMap::Trace::Tracer.trace tracer

quit = false
event_thread = Thread.new do
  while tracer.has_event? || !quit
    event = tracer.next_event
    if event
      puts event.to_h.to_json
    else
      sleep 0.0001
    end
  end
end
event_thread.abort_on_exception = true

at_exit do
  quit = true
  event_thread.join
end

load program
